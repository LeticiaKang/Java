package thebrains.pim.controller;
import thebrains.pim.view.TUIView;
public class MemberController {
	/* MVC(Model-View-Controller)
	// : 모델 기반 개인정보 관리(Personal Information System) 개발
	// MVCS (+ Service)
	// CRUD(Create Read Update Delete) : 자료를 처리하는 기본 기능
	   추가 기능 : 정렬, 검색, 페이지 */

	
//	컨트롤러가 받아서 모델을 통해 데이터를 저장하려고 함
//  컨트롤러는 요청을 제어할거야
//	뷰는 저장된 정보를 보여줄거야
//  모델은 데이터를 저장하는 역할
//  서비스는 통계나 데이터처리가 이상해 할 때 보는거
	
//================== 생성자 =======================
	//	MemberView memberView = null;
	//	MemberService<Member> memberService = null;
	public MemberController() {};
	public static TUIView tui = new TUIView();
	
//================== 메소드 =======================
	// 메소드 1 : 로그인 모드/ 전후로 어떤 모습이 되어야 할까?
	public void dispatch() {
		// dispatch라는 것은 시작의 의미가 있음; 명령을 가져옴

		boolean isLogin = true;
		boolean isRoot = false;
		// 관리자로 로그인 할 수도 있고, 사용자 로그인 할 수 있음
		// 문제 : 관리자 전, 로그인했을 때 일반사용자냐 관리자냐 
		
		// true, true → root 로그인
		// true, false → 사용자 로그인
		// false, * → 끝
		
//		tui.showMenu(isLogin, isRoot);
		
	}
	
}
